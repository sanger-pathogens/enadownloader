default:
  tags:
    - autoscale

variables:
  TAG: "$(date -u '+%Y-%m-%dT%H:%M:%S')-${CI_COMMIT_SHORT_SHA}"

workflow:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: always

stages:
  - format
  - test
  - build
  - tag_on_merges

# this fragment starts the Docker daemon inside the CI-launched
# container
.job_template: &start_docker
  before_script:
    - mkdir -p /etc/docker
    - echo '{"registry-mirrors":["https://docker-hub-mirror.internal.sanger.ac.uk:5000"],"default-address-pools":[{"base":"192.168.4.0/16","size":24}]}' > /etc/docker/daemon.json
    - dockerd > /var/log/dockerd.log 2>&1 &
    - sleep 10
    - echo -n ${CI_JOB_TOKEN} | docker login -u gitlab-ci-token --password-stdin ${CI_REGISTRY}

Check Black format:
  stage: format
  only:
    - branches
  except:
    - tags
  script:
    - pip install black
    - black . --check --diff --color

#Pytest:
#  stage: test
#  only:
#    - branches
#  except:
#    - tags
#  <<: *start_docker
#  script:
#    - TAG="commit-${CI_COMMIT_SHORT_SHA}"
#    - docker build --no-cache -t "${CI_REGISTRY_IMAGE}:${TAG}" .
#    - docker run "${CI_REGISTRY_IMAGE}:${TAG}" pytest --cov ena_download.py --cov-branch --cov-report term-missing --cov-fail-under 60
#  coverage: /^.*TOTAL.+?(\d+\%)$/


# at every git push, build docker image and push to the container registry with the commit SHA-1 as the tag
Docker builds:
  stage: build
  only:
    - branches
  except:
    - tags
  <<: *start_docker
  script:
    - echo "🐳 Building ${CI_REGISTRY_IMAGE}:${TAG} 🐳"
    - docker build --no-cache -t "${CI_REGISTRY_IMAGE}:${TAG}" --target runner .
    - echo "🐳 Pushing ${CI_REGISTRY_IMAGE}:${TAG} 🐳"
    - docker push ${CI_REGISTRY_IMAGE}:${TAG}
