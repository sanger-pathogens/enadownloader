default:
  tags:
    - autoscale
  image: gitlab-registry.internal.sanger.ac.uk/isg/gitlab-ci-docker-docker:128456_master

stages:
  - format
  - test
  - build

.start_docker: &start_docker
  before_script:
    - mkdir -p /etc/docker
    - echo '{"registry-mirrors":["https://docker-hub-mirror.internal.sanger.ac.uk:5000"],"default-address-pools":[{"base":"192.168.4.0/16","size":24}]}' > /etc/docker/daemon.json
    - dockerd > /var/log/dockerd.log 2>&1 &
    - sleep 5
    - echo -n ${CI_JOB_TOKEN} | docker login -u gitlab-ci-token --password-stdin ${CI_REGISTRY}

.build_and_push: &build_and_push
  - export TAG=$(echo ${TAG} | sed s';/;_;g')
  - export IMAGE="${CI_REGISTRY_IMAGE}:${TAG}"
  - echo "🐳 Building ${IMAGE} 🐳"
  - docker build --no-cache -t "${IMAGE}" --target runner .
  - docker run ${IMAGE} enadownloader -h  # Just check that help works, catch docker build issues early
  - echo "🐳 Pushing ${IMAGE} 🐳"
  - docker push ${IMAGE}

Check Black format:
  stage: format
  only:
    - branches
  script:
    - pip install black
    - black . --check --diff --color

Test with pytest:
    stage: test
    only:
      - branches
    except:
      - tags
    <<: *start_docker
    script:
      - docker build -t test_image --target test .
      - docker run test_image pytest --cov src --cov-branch --cov-report term-missing --cov-fail-under 80
    coverage: /^.*TOTAL.+?(\d+\%)$/

Branch builds:
  stage: build
  variables:
    TAG: "${CI_COMMIT_BRANCH}-${CI_COMMIT_SHORT_SHA}"
  only:
    - branches
  except:
    - master
  <<: *start_docker
  script:
    - *build_and_push

Tag builds:
  stage: build
  variables:
    TAG: "${CI_COMMIT_TAG}-${CI_COMMIT_SHORT_SHA}"
  only:
    - tags
  <<: *start_docker
  script:
    - export VTAG=$(echo ${CI_COMMIT_TAG} | cut -c 2-)
    - sed -i.o "s/version = .*/version = ${VTAG}/g" setup.cfg
    - if [ -f setup.cfg.o ]; then rm setup.cfg.o; fi
    - *build_and_push
